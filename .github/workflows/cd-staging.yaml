name: CD(staging)

on: # 検証用。マージ時に修正する。
  push:
    branches:
      - feature/#115-docker-enviroment
  workflow_dispatch:

jobs:
  push-image:
    runs-on: [self-hosted, portainer]
    steps:
      - uses: actions/checkout@v4
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/sohosai/sos24-server
          tags: stg
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # deploy:
  #   runs-on: [self-hosted, portainer]
  #     - name: Deploy to Portainer
  #       run: |
  #         # List stacks
  #         STACKS=$(curl -s -X GET "${{ secrets.PORTAINER_URL }}/api/stacks" -H "Content-Type: application/json" -gH "x-api-key:${{ secrets.PORTAINER_APIKEY }}")

  #         # Get stack ID by name
  #         STACK_ID=$(echo "${STACKS}" | jq -r --arg STACK_NAME "${STACK_NAME}" '.[] | select(.Name == $STACK_NAME) | .Id')

  #         # Create or update stack
  #         if [ -n "${STACK_ID}" ]; then
  #           echo "Updating stack"
  #           UPDATE_DATA="{\"prune\": ${PRUNE}, \"pullImage\": ${PULL_IMAGE}, \"stackFileContent\": \"$(cat ${COMPOSE_FILE})\"}"
  #           curl -X PUT "${{ secrets.PORTAINER_URL }}/api/stacks/${STACK_ID}?endpointId=${ENDPOINT_ID}" -H "Content-Type: application/json" -gH "x-api-key:${{ secrets.PORTAINER_APIKEY }}" -d "${UPDATE_DATA}"
  #         else
  #           echo "Creating stack"
  #           CREATE_DATA="{\"name\": \"${STACK_NAME}\", \"Env\": [${{ secrets.PORTAINER_VARIABLE }}], \"stackFileContent\": \"$(cat ${COMPOSE_FILE})\"}"
  #           curl -X POST "${{ secrets.PORTAINER_URL }}/api/stacks?type=${STACK_TYPE}&method=string&endpointId=${ENDPOINT_ID}" -H "Content-Type: application/json" -gH "x-api-key:${{ secrets.PORTAINER_APIKEY }}" -d "${CREATE_DATA}"
  #         fi
  #       env:
  #         STACK_NAME: "your-stack-name"
  #         STACK_TYPE: 2
  #         ENDPOINT_ID: 2
  #         COMPOSE_FILE: "docker-compose.yaml"
  #         PULL_IMAGE: "true"
  #         VERIFY_SSL: "true"
